//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Resources/Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Controls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Controls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controls"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""f4602fa3-8933-416f-a245-5dfe46e6dac7"",
            ""actions"": [
                {
                    ""name"": ""Rotate"",
                    ""type"": ""Value"",
                    ""id"": ""012a504d-8c14-4e14-96db-c3f887ef51b4"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Sails"",
                    ""type"": ""Value"",
                    ""id"": ""69076952-349d-4a36-aec2-70ffe599f9e9"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LeftCannons"",
                    ""type"": ""Button"",
                    ""id"": ""29abb171-4a46-44a5-a602-e1c608d36380"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightCannons"",
                    ""type"": ""Button"",
                    ""id"": ""7304912e-93b4-4272-9e47-c4175557786a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ForwardCannon"",
                    ""type"": ""Button"",
                    ""id"": ""e3e7a5e2-74d6-4317-b032-31974bf3496a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Mine"",
                    ""type"": ""Button"",
                    ""id"": ""4a65cab8-1426-4664-a4c6-c9c2ad8cf1c8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""a8119117-eca7-48c7-bf68-6b76eb430801"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""f4db62b1-4116-4005-88fa-32f010b78ba2"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""e55847b0-b1b4-4952-8286-8a7f61e75ef5"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""aad354dc-5df9-45bf-adc7-35242612d9c5"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""a850268d-0bf5-4c8b-bf12-a9a2d1bebe53"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""2350ec0d-a319-4416-bfca-4bdfbba97ca1"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""ed75004e-84b6-4738-9d8a-ce1dd621356d"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sails"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""1392d3fb-1e06-4baf-aec8-f0fcd2ed7db2"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sails"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""d5221cb3-74c0-4878-9483-d2922a44e780"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sails"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""f90f801d-815e-4d8b-9483-a41c4a23f815"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sails"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""68060159-ea94-42aa-a737-a3785c30c15f"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sails"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""f5a16ced-687f-42b6-bf13-78b92c06b04b"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sails"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""e941017d-8615-4e08-a251-2c2614002ac9"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftCannons"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""de400262-d7b1-4a40-9bac-409b3e189604"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftCannons"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""08d19840-c0c9-4276-8f8e-6e581715c57f"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightCannons"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bcce2fe8-9593-4041-b002-eec8dab67046"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightCannons"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ac4f2fa9-6fed-4cb1-a79a-0f155a9135f1"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ForwardCannon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""16438ae2-a044-4c38-822c-158a4d07fa1c"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ForwardCannon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""90020031-1dba-4c4c-83e8-347f96ab5e08"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mine"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3e48d4c3-07cc-484d-8372-211fdcff13e3"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mine"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Rotate = m_Player.FindAction("Rotate", throwIfNotFound: true);
        m_Player_Sails = m_Player.FindAction("Sails", throwIfNotFound: true);
        m_Player_LeftCannons = m_Player.FindAction("LeftCannons", throwIfNotFound: true);
        m_Player_RightCannons = m_Player.FindAction("RightCannons", throwIfNotFound: true);
        m_Player_ForwardCannon = m_Player.FindAction("ForwardCannon", throwIfNotFound: true);
        m_Player_Mine = m_Player.FindAction("Mine", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_Rotate;
    private readonly InputAction m_Player_Sails;
    private readonly InputAction m_Player_LeftCannons;
    private readonly InputAction m_Player_RightCannons;
    private readonly InputAction m_Player_ForwardCannon;
    private readonly InputAction m_Player_Mine;
    public struct PlayerActions
    {
        private @Controls m_Wrapper;
        public PlayerActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Rotate => m_Wrapper.m_Player_Rotate;
        public InputAction @Sails => m_Wrapper.m_Player_Sails;
        public InputAction @LeftCannons => m_Wrapper.m_Player_LeftCannons;
        public InputAction @RightCannons => m_Wrapper.m_Player_RightCannons;
        public InputAction @ForwardCannon => m_Wrapper.m_Player_ForwardCannon;
        public InputAction @Mine => m_Wrapper.m_Player_Mine;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @Rotate.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRotate;
                @Rotate.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRotate;
                @Rotate.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRotate;
                @Sails.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSails;
                @Sails.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSails;
                @Sails.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSails;
                @LeftCannons.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftCannons;
                @LeftCannons.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftCannons;
                @LeftCannons.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftCannons;
                @RightCannons.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRightCannons;
                @RightCannons.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRightCannons;
                @RightCannons.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRightCannons;
                @ForwardCannon.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnForwardCannon;
                @ForwardCannon.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnForwardCannon;
                @ForwardCannon.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnForwardCannon;
                @Mine.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMine;
                @Mine.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMine;
                @Mine.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMine;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Rotate.started += instance.OnRotate;
                @Rotate.performed += instance.OnRotate;
                @Rotate.canceled += instance.OnRotate;
                @Sails.started += instance.OnSails;
                @Sails.performed += instance.OnSails;
                @Sails.canceled += instance.OnSails;
                @LeftCannons.started += instance.OnLeftCannons;
                @LeftCannons.performed += instance.OnLeftCannons;
                @LeftCannons.canceled += instance.OnLeftCannons;
                @RightCannons.started += instance.OnRightCannons;
                @RightCannons.performed += instance.OnRightCannons;
                @RightCannons.canceled += instance.OnRightCannons;
                @ForwardCannon.started += instance.OnForwardCannon;
                @ForwardCannon.performed += instance.OnForwardCannon;
                @ForwardCannon.canceled += instance.OnForwardCannon;
                @Mine.started += instance.OnMine;
                @Mine.performed += instance.OnMine;
                @Mine.canceled += instance.OnMine;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    public interface IPlayerActions
    {
        void OnRotate(InputAction.CallbackContext context);
        void OnSails(InputAction.CallbackContext context);
        void OnLeftCannons(InputAction.CallbackContext context);
        void OnRightCannons(InputAction.CallbackContext context);
        void OnForwardCannon(InputAction.CallbackContext context);
        void OnMine(InputAction.CallbackContext context);
    }
}
